{"version":3,"file":"component---src-templates-markdown-js-3bc00e347739a8d0138e.js","mappings":"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","sources":["webpack://writings-by-david-hartsough/./src/components/BaseHelmet.js","webpack://writings-by-david-hartsough/./src/components/PageHelmet.js","webpack://writings-by-david-hartsough/./src/components/DarkModeToggle.js","webpack://writings-by-david-hartsough/./src/components/PageNav.js","webpack://writings-by-david-hartsough/./src/templates/markdown.js"],"sourcesContent":["import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport \"normalize.css\";\nimport \"./base.css\";\n\nexport default function BaseHelmet() {\n  const {\n    site: {\n      siteMetadata: { name, color, siteUrl },\n    },\n  } = useStaticQuery(\n    graphql`\n      query BaseHelmet {\n        site {\n          siteMetadata {\n            name\n            color\n            siteUrl\n          }\n        }\n      }\n    `\n  );\n  return (\n    <Helmet>\n      <html lang=\"en\" prefix=\"og: http://ogp.me/ns#\" />\n      <meta name=\"author\" content={name} />\n      <meta property=\"og:locale\" content=\"en_US\" />\n      <meta property=\"og:site_name\" content={name} />\n      <link rel=\"shortcut icon\" href=\"/favicon.ico\" />\n      <link\n        href={`${siteUrl}/favicon-16x16.png`}\n        rel=\"icon\"\n        sizes=\"16x16\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${siteUrl}/favicon-32x32.png`}\n        rel=\"icon\"\n        sizes=\"32x32\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${siteUrl}/icon192.png`}\n        rel=\"icon\"\n        sizes=\"192x192\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${siteUrl}/icon.png`}\n        rel=\"icon\"\n        sizes=\"512x512\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${siteUrl}/apple-touch-icon.png`}\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n      />\n\n      <meta\n        name=\"msapplication-TileImage\"\n        content={`${siteUrl}/mstile-144x144.png`}\n      />\n      <meta name=\"msapplication-TileColor\" content={color} />\n      <link rel=\"mask-icon\" href={`${siteUrl}/mask-icon.svg`} color={color} />\n      <meta name=\"theme-color\" content={color} />\n      <meta property=\"og:locale\" content=\"en_US\" />\n      <meta property=\"og:site_name\" content={name} />\n      <meta property=\"og:image\" content={`${siteUrl}/icon.png`} />\n      <meta property=\"og:image:type\" content=\"image/png\" />\n      <meta property=\"og:image:alt\" content={`${name}'s logo`} />\n    </Helmet>\n  );\n}\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport \"./theme.css\";\n\nexport default function PageHelmet({ title, description, keywords, slug }) {\n  const {\n    site: {\n      siteMetadata: { name, baseKeywords, url },\n    },\n  } = useStaticQuery(\n    graphql`\n      query PageHelmet {\n        site {\n          siteMetadata {\n            name\n            baseKeywords\n            url\n          }\n        }\n      }\n    `\n  );\n  return (\n    <Helmet>\n      <title>{`${title} â€¢ ${name}`}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={`${baseKeywords}${keywords}`} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:url\" content={`${url}${slug}`} />\n      <meta property=\"og:description\" content={description} />\n    </Helmet>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./toggle.css\";\n\nexport default function DarkModeToggle() {\n  const [dark, setDark] = useState(true);\n  useEffect(() => {\n    if (window.localStorage.getItem(\"dark\") === \"false\") {\n      setDark(false);\n      document.body.className = \"light\";\n    }\n  }, []);\n  function toggle() {\n    document.body.className = dark ? \"light\" : \"\";\n    window.localStorage.setItem(\"dark\", dark ? \"false\" : \"true\");\n    setDark(!dark);\n  }\n  return (\n    <button onClick={toggle} className=\"dark-mode-toggle\" type=\"button\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        className=\"dark-mode-icon\"\n      >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18V6c3.31 0 6 2.69 6 6s-2.69 6-6 6z\" />\n      </svg>\n    </button>\n  );\n}\n","import React from \"react\";\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\nimport DarkModeToggle from \"./DarkModeToggle\";\n\nexport default function PageNav() {\n  const {\n    site: {\n      siteMetadata: { name },\n    },\n  } = useStaticQuery(\n    graphql`\n      query PageNav {\n        site {\n          siteMetadata {\n            name\n          }\n        }\n      }\n    `\n  );\n  return (\n    <nav>\n      <Link to=\"/\" className=\"nav-link\">\n        {name}\n      </Link>\n      <DarkModeToggle />\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport BaseHelmet from \"../components/BaseHelmet\";\nimport PageHelmet from \"../components/PageHelmet\";\nimport PageNav from \"../components/PageNav\";\n\nexport default function MarkdownPage({ data }) {\n  const { html, frontmatter, fields } = data.markdownRemark;\n  const slug = fields.slug.substring(1);\n  const { title, date, keywords, description } = frontmatter;\n  return (\n    <main>\n      <BaseHelmet />\n      <PageHelmet\n        title={title}\n        description={description}\n        keywords={keywords}\n        slug={slug}\n      />\n      <PageNav />\n      <header>\n        <h1 className=\"heading\">{title}</h1>\n        <p className=\"date\">{date}</p>\n      </header>\n      <article dangerouslySetInnerHTML={{ __html: html }} />\n    </main>\n  );\n}\n\nexport const query = graphql`\n  query MarkdownQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n        description\n        keywords\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"names":["BaseHelmet","useStaticQuery","site","siteMetadata","name","color","siteUrl","lang","prefix","content","property","rel","href","sizes","type","PageHelmet","title","description","keywords","slug","baseKeywords","url","Helmet","DarkModeToggle","useState","dark","setDark","useEffect","window","localStorage","getItem","document","body","className","onClick","setItem","xmlns","width","height","viewBox","d","fill","PageNav","to","MarkdownPage","data","markdownRemark","html","frontmatter","fields","substring","date","dangerouslySetInnerHTML","__html"],"sourceRoot":""}