{"version":3,"file":"component---src-pages-index-js-18c18cca5e76907e0b60.js","mappings":"iNAMe,SAASA,IACtB,OAIIC,EAAAA,EAAAA,gBAAe,cAHjBC,KACEC,aAAgBC,EAFpB,EAEoBA,KAAMC,EAF1B,EAE0BA,MAAOC,EAFjC,EAEiCA,QAejC,OACE,gBAAC,IAAD,KACE,wBAAMC,KAAK,KAAKC,OAAO,0BACvB,wBAAMJ,KAAK,SAASK,QAASL,IAC7B,wBAAMM,SAAS,YAAYD,QAAQ,UACnC,wBAAMC,SAAS,eAAeD,QAASL,IACvC,wBAAMO,IAAI,gBAAgBC,KAAK,iBAC/B,wBACEA,KAASN,EAAL,qBACJK,IAAI,OACJE,MAAM,QACNC,KAAK,cAEP,wBACEF,KAASN,EAAL,qBACJK,IAAI,OACJE,MAAM,QACNC,KAAK,cAEP,wBACEF,KAASN,EAAL,eACJK,IAAI,OACJE,MAAM,UACNC,KAAK,cAEP,wBACEF,KAASN,EAAL,YACJK,IAAI,OACJE,MAAM,UACNC,KAAK,cAEP,wBACEF,KAASN,EAAL,wBACJK,IAAI,mBACJE,MAAM,YAGR,wBACET,KAAK,0BACLK,QAAYH,EAAL,wBAET,wBAAMF,KAAK,0BAA0BK,QAASJ,IAC9C,wBAAMM,IAAI,YAAYC,KAASN,EAAL,iBAA8BD,MAAOA,IAC/D,wBAAMD,KAAK,cAAcK,QAASJ,IAClC,wBAAMK,SAAS,YAAYD,QAAQ,UACnC,wBAAMC,SAAS,eAAeD,QAASL,IACvC,wBAAMM,SAAS,WAAWD,QAAYH,EAAL,cACjC,wBAAMI,SAAS,gBAAgBD,QAAQ,cACvC,wBAAMC,SAAS,eAAeD,QAAYL,EAAL,e,8GCnE5B,SAASW,IACtB,OAIId,EAAAA,EAAAA,gBAAe,cAHjBC,KACEC,aAAgBa,EAFpB,EAEoBA,MAAOC,EAF3B,EAE2BA,YAAaC,EAFxC,EAEwCA,SAAUC,EAFlD,EAEkDA,IAgBlD,OACE,gBAACC,EAAA,EAAD,KACE,6BAAQJ,GACR,wBAAMZ,KAAK,cAAcK,QAASQ,IAClC,wBAAMb,KAAK,WAAWK,QAASS,IAC/B,wBAAMR,SAAS,WAAWD,QAASO,IACnC,wBAAMN,SAAS,UAAUD,QAAQ,YACjC,wBAAMC,SAAS,SAASD,QAASU,IACjC,wBAAMT,SAAS,iBAAiBD,QAASQ,KC3B/C,IAAMI,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMN,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,YAAhB,OACX,uBAAKM,UAAU,QACb,uBAAKA,UAAU,aACb,qBAAGA,UAAU,cACX,gBAAC,EAAAC,KAAD,CAAMC,GAAIH,EAAMC,UAAU,mBACvBP,IAGL,qBAAGO,UAAU,oBAAoBN,MAKxB,SAASS,EAAT,GAA8B,IACrCC,EADoC,EAARC,KACfC,kBAAkBC,MAAMC,KACzC,oBACEC,KACEC,EAFJ,EAEIA,GAFJ,IAGIC,YAHJ,MAMO,CAAED,GAAAA,EAAIjB,MANb,EAGmBA,MAGCC,YANpB,EAG0BA,YAGOK,KANjC,EAIIa,OAAUb,SAIhB,OACE,uBAAKC,UAAU,MACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,SACb,uBAAKA,UAAU,WACb,gBAACvB,EAAA,EAAD,MACA,gBAACe,EAAD,MACA,sBAAIQ,UAAU,SAAd,WAEE,wBAAMA,UAAU,aAAhB,OACA,qBAAGX,KAAK,8BAA8BW,UAAU,iBAAhD,oBAIF,uBAAKA,UAAU,SACZI,EAAMI,KAAI,gBAAGE,EAAH,EAAGA,GAAIjB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaK,EAA3B,EAA2BA,KAA3B,OACT,gBAACD,EAAD,CACEe,IAAKH,EACLX,KAAMA,EACNN,MAAOA,EACPC,YAAaA","sources":["webpack://writings-by-david-hartsough/./src/components/BaseHelmet.js","webpack://writings-by-david-hartsough/./src/components/HomeHelmet.js","webpack://writings-by-david-hartsough/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport \"normalize.css\";\nimport \"./base.css\";\n\nexport default function BaseHelmet() {\n  const {\n    site: {\n      siteMetadata: { name, color, siteUrl },\n    },\n  } = useStaticQuery(\n    graphql`\n      query BaseHelmet {\n        site {\n          siteMetadata {\n            name\n            color\n            siteUrl\n          }\n        }\n      }\n    `\n  );\n  return (\n    <Helmet>\n      <html lang=\"en\" prefix=\"og: http://ogp.me/ns#\" />\n      <meta name=\"author\" content={name} />\n      <meta property=\"og:locale\" content=\"en_US\" />\n      <meta property=\"og:site_name\" content={name} />\n      <link rel=\"shortcut icon\" href=\"/favicon.ico\" />\n      <link\n        href={`${siteUrl}/favicon-16x16.png`}\n        rel=\"icon\"\n        sizes=\"16x16\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${siteUrl}/favicon-32x32.png`}\n        rel=\"icon\"\n        sizes=\"32x32\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${siteUrl}/icon192.png`}\n        rel=\"icon\"\n        sizes=\"192x192\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${siteUrl}/icon.png`}\n        rel=\"icon\"\n        sizes=\"512x512\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${siteUrl}/apple-touch-icon.png`}\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n      />\n\n      <meta\n        name=\"msapplication-TileImage\"\n        content={`${siteUrl}/mstile-144x144.png`}\n      />\n      <meta name=\"msapplication-TileColor\" content={color} />\n      <link rel=\"mask-icon\" href={`${siteUrl}/mask-icon.svg`} color={color} />\n      <meta name=\"theme-color\" content={color} />\n      <meta property=\"og:locale\" content=\"en_US\" />\n      <meta property=\"og:site_name\" content={name} />\n      <meta property=\"og:image\" content={`${siteUrl}/icon.png`} />\n      <meta property=\"og:image:type\" content=\"image/png\" />\n      <meta property=\"og:image:alt\" content={`${name}'s logo`} />\n    </Helmet>\n  );\n}\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport \"./home.css\";\n\nexport default function HomeHelmet() {\n  const {\n    site: {\n      siteMetadata: { title, description, keywords, url },\n    },\n  } = useStaticQuery(\n    graphql`\n      query HomeHelmet {\n        site {\n          siteMetadata {\n            title\n            description\n            keywords\n            url\n          }\n        }\n      }\n    `\n  );\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:description\" content={description} />\n    </Helmet>\n  );\n}\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport BaseHelmet from \"../components/BaseHelmet\";\nimport HomeHelmet from \"../components/HomeHelmet\";\n\nconst Item = ({ slug, title, description }) => (\n  <div className=\"item\">\n    <div className=\"item-text\">\n      <p className=\"item-title\">\n        <Link to={slug} className=\"item-title-link\">\n          {title}\n        </Link>\n      </p>\n      <p className=\"item-description\">{description}</p>\n    </div>\n  </div>\n);\n\nexport default function IndexPage({ data }) {\n  const items = data.allMarkdownRemark.edges.map(\n    ({\n      node: {\n        id,\n        frontmatter: { title, description },\n        fields: { slug },\n      },\n    }) => ({ id, title, description, slug })\n  );\n  return (\n    <div className=\"bg\">\n      <div className=\"pattern\">\n        <div className=\"index\">\n          <div className=\"central\">\n            <BaseHelmet />\n            <HomeHelmet />\n            <h1 className=\"title\">\n              Writings\n              <span className=\"separator\"> â€¢ </span>\n              <a href=\"https://davidhartsough.com/\" className=\"subtitle-link\">\n                David Hartsough\n              </a>\n            </h1>\n            <div className=\"items\">\n              {items.map(({ id, title, description, slug }) => (\n                <Item\n                  key={id}\n                  slug={slug}\n                  title={title}\n                  description={description}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const query = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            description\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["BaseHelmet","useStaticQuery","site","siteMetadata","name","color","siteUrl","lang","prefix","content","property","rel","href","sizes","type","HomeHelmet","title","description","keywords","url","Helmet","Item","slug","className","Link","to","IndexPage","items","data","allMarkdownRemark","edges","map","node","id","frontmatter","fields","key"],"sourceRoot":""}