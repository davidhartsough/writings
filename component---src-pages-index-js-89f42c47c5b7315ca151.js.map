{"version":3,"sources":["webpack:///./src/components/IndexHelmet.js","webpack:///./src/pages/index.js"],"names":["data","title","name","content","description","keywords","rel","href","url","property","type","schemaType","image","author","authorUrl","IndexHelmet","site","siteMetadata","className","allMarkdownRemark","edges","map","node","key","id","to","fields","slug","frontmatter","date","query"],"mappings":"wKAGe,kBAAGA,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,KACE,+BAAQA,EAAKC,OACb,0BAAMC,KAAK,cAAcC,QAASH,EAAKI,cACvC,0BAAMF,KAAK,WAAWC,QAASH,EAAKK,WACpC,0BAAMC,IAAI,YAAYC,KAAMP,EAAKQ,MACjC,0BAAMC,SAAS,WAAWN,QAASH,EAAKC,QACxC,0BAAMQ,SAAS,UAAUN,QAAQ,YACjC,0BAAMM,SAAS,SAASN,QAASH,EAAKQ,MACtC,0BAAMC,SAAS,iBAAiBN,QAASH,EAAKI,cAC9C,4BAAQM,KAAK,uBAAb,2EAGgBV,EAAKW,WAHrB,wBAIeX,EAAKC,MAJpB,uBAKcD,EAAKQ,IALnB,4BAMmBR,EAAKC,MANxB,4BAOmBD,EAAKK,SAPxB,+BAQsBL,EAAKI,YAR3B,yBASgBJ,EAAKY,MATrB,6EAYiBZ,EAAKa,OAZtB,yBAagBb,EAAKc,UAbrB,iCCbJ,sCAKe,0BAAGd,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,KACE,kBAACe,EAAD,CAAaf,KAAMA,EAAKgB,KAAKC,eAC7B,gCACE,wBAAIC,UAAU,WAAd,YACA,uBAAGA,UAAU,cAAb,KACK,IACH,uBAAGX,KAAMP,EAAKgB,KAAKC,aAAaH,WAC7Bd,EAAKgB,KAAKC,aAAaJ,UAI9B,4BACGb,EAAKmB,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,wBAAIC,IAAKD,EAAKE,IACZ,kBAAC,OAAD,CAAMC,GAAIH,EAAKI,OAAOC,MAAtB,IACIL,EAAKM,YAAYC,KADrB,KAC6BP,EAAKM,YAAY3B,cAhBzC,IAwBF6B,EAAK","file":"component---src-pages-index-js-89f42c47c5b7315ca151.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\n\nexport default ({ data }) => (\n  <Helmet>\n    <title>{data.title}</title>\n    <meta name=\"description\" content={data.description} />\n    <meta name=\"keywords\" content={data.keywords} />\n    <link rel=\"canonical\" href={data.url} />\n    <meta property=\"og:title\" content={data.title} />\n    <meta property=\"og:type\" content=\"website\" />\n    <meta property=\"og:url\" content={data.url} />\n    <meta property=\"og:description\" content={data.description} />\n    <script type=\"application/ld+json\">{`\n      {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"${data.schemaType}\",\n        \"name\": \"${data.title}\",\n        \"url\": \"${data.url}\",\n        \"headline\": \"${data.title}\",\n        \"keywords\": \"${data.keywords}\",\n        \"description\": \"${data.description}\",\n        \"image\": \"${data.image}\",\n        \"author\": {\n          \"@type\": \"Person\",\n          \"name\": \"${data.author}\",\n          \"url\": \"${data.authorUrl}\"\n        }\n      }\n    `}</script>\n  </Helmet>\n)\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport IndexHelmet from '../components/IndexHelmet'\n\nexport default ({ data }) => (\n  <Layout>\n    <IndexHelmet data={data.site.siteMetadata} />\n    <header>\n      <h1 className=\"heading\">Writings</h1>\n      <p className=\"subheading\">\n        by{' '}\n        <a href={data.site.siteMetadata.authorUrl}>\n          {data.site.siteMetadata.author}\n        </a>\n      </p>\n    </header>\n    <ul>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <li key={node.id}>\n          <Link to={node.fields.slug}>\n            ({node.frontmatter.date}) {node.frontmatter.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n)\n\nexport const query = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        keywords\n        author\n        url\n        image\n        schemaType\n        authorUrl\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}