{"version":3,"sources":["webpack:///./src/components/MarkdownHelmet.js","webpack:///./src/templates/markdown.js","webpack:///./src/components/LayoutHelmet.js","webpack:///./src/components/layout.js"],"names":["MarkdownHelmet","_ref","data","react_default","a","createElement","Helmet_default","title","name","content","description","keywords","rel","href","url","property","type","image","author","authorUrl","__webpack_require__","d","__webpack_exports__","query","meta","site","siteMetadata","md","markdownRemark","layout","frontmatter","baseKeywords","fields","slug","substring","className","gatsby_browser_entry","to","date","dangerouslySetInnerHTML","__html","html","LayoutHelmet","lang","prefix","imageAlt","twitterSite","twitterCreator","sizes","themeColorHex","color","children","render","_3808212352"],"mappings":"wJAGeA,EAAA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACbC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAAA,aAAQH,EAAKK,MAAb,sBACAJ,EAAAC,EAAAC,cAAA,QAAMG,KAAK,cAAcC,QAASP,EAAKQ,cACvCP,EAAAC,EAAAC,cAAA,QAAMG,KAAK,WAAWC,QAASP,EAAKS,WACpCR,EAAAC,EAAAC,cAAA,QAAMO,IAAI,YAAYC,KAAMX,EAAKY,MACjCX,EAAAC,EAAAC,cAAA,QAAMU,SAAS,WAAWN,QAASP,EAAKK,QACxCJ,EAAAC,EAAAC,cAAA,QAAMU,SAAS,UAAUN,QAAQ,YACjCN,EAAAC,EAAAC,cAAA,QAAMU,SAAS,SAASN,QAASP,EAAKY,MACtCX,EAAAC,EAAAC,cAAA,QAAMU,SAAS,iBAAiBN,QAASP,EAAKQ,cAC9CP,EAAAC,EAAAC,cAAA,UAAQW,KAAK,uBAAb,2GAIed,EAAKK,MAJpB,uBAKcL,EAAKY,IALnB,4BAMmBZ,EAAKK,MANxB,4BAOmBL,EAAKS,SAPxB,+BAQsBT,EAAKQ,YAR3B,yBASgBR,EAAKe,MATrB,6EAYiBf,EAAKgB,OAZtB,yBAagBhB,EAAKiB,UAbrB,iCCbJC,EAAAC,EAAAC,EAAA,0BAAAC,IAKAD,EAAA,iBAAerB,GAAc,IAAXC,EAAWD,EAAXC,KACVsB,EAAOtB,EAAKuB,KAAKC,aACjBC,EAAKzB,EAAK0B,eAChB,OACEzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACE1B,EAAAC,EAAAC,cAACL,EAAD,CACEE,KAAM,CACJK,MAAOoB,EAAGG,YAAYvB,MACtBG,YAAaiB,EAAGG,YAAYpB,YAC5BC,SAAQ,GAAKa,EAAKO,aAAeJ,EAAGG,YAAYnB,SAChDG,IAAG,GAAKU,EAAKV,IAAMa,EAAGK,OAAOC,KAAKC,UAAU,GAC5CjB,MAAOO,EAAKP,MACZC,OAAQM,EAAKN,OACbC,UAAWK,EAAKL,aAGpBhB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAKsB,EAAGG,YAAYvB,OACpBJ,EAAAC,EAAAC,cAAA,KAAG8B,UAAU,cAAb,MACKhC,EAAAC,EAAAC,cAAC+B,EAAA,KAAD,CAAMC,GAAG,KAAKb,EAAKN,QAAe,IACrCf,EAAAC,EAAAC,cAAA,QAAM8B,UAAU,QAAhB,IAAyBR,EAAGG,YAAYQ,KAAxC,OAGJnC,EAAAC,EAAAC,cAAA,OAAKkC,wBAAyB,CAAEC,OAAQb,EAAGc,UAvBjD,IA4BalB,EAAK,kcC9BHmB,EAAA,SAAAzC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACbC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAMsC,KAAK,KAAKC,OAAO,0BACvBzC,EAAAC,EAAAC,cAAA,QAAMG,KAAK,SAASC,QAASP,EAAKgB,SAClCf,EAAAC,EAAAC,cAAA,QAAMU,SAAS,WAAWN,QAASP,EAAKe,QACxCd,EAAAC,EAAAC,cAAA,QAAMU,SAAS,gBAAgBN,QAAQ,cACvCN,EAAAC,EAAAC,cAAA,QAAMU,SAAS,eAAeN,QAASP,EAAK2C,WAC5C1C,EAAAC,EAAAC,cAAA,QAAMU,SAAS,YAAYN,QAAQ,UACnCN,EAAAC,EAAAC,cAAA,QAAMU,SAAS,eAAeN,QAASP,EAAKK,QAC5CJ,EAAAC,EAAAC,cAAA,QAAMG,KAAK,eAAeC,QAAQ,YAClCN,EAAAC,EAAAC,cAAA,QAAMG,KAAK,eAAeC,QAASP,EAAK4C,cACxC3C,EAAAC,EAAAC,cAAA,QAAMG,KAAK,kBAAkBC,QAASP,EAAK6C,iBAC3C5C,EAAAC,EAAAC,cAAA,QAAMG,KAAK,yBAAyBC,QAAQ,QAC5CN,EAAAC,EAAAC,cAAA,QAAMG,KAAK,mBAAmBC,QAASP,EAAKK,QAC5CJ,EAAAC,EAAAC,cAAA,QAAMG,KAAK,+BAA+BC,QAAQ,QAClDN,EAAAC,EAAAC,cAAA,QAAMG,KAAK,6BAA6BC,QAASP,EAAKK,QACtDJ,EAAAC,EAAAC,cAAA,QAAMG,KAAK,wCAAwCC,QAAQ,UAC3DN,EAAAC,EAAAC,cAAA,QAAMG,KAAK,mBAAmBC,QAAQ,iBACtCN,EAAAC,EAAAC,cAAA,QAAMO,IAAI,gBAAgBC,KAAK,iBAC/BV,EAAAC,EAAAC,cAAA,QAAMO,IAAI,OAAOI,KAAK,YAAYgC,MAAM,QAAQnC,KAAK,uBACrDV,EAAAC,EAAAC,cAAA,QACEO,IAAI,OACJI,KAAK,YACLgC,MAAM,UACNnC,KAAK,gCAEPV,EAAAC,EAAAC,cAAA,QAAMO,IAAI,mBAAmBoC,MAAM,UAAUnC,KAAK,0BAClDV,EAAAC,EAAAC,cAAA,QAAMG,KAAK,0BAA0BC,QAAQ,wBAC7CN,EAAAC,EAAAC,cAAA,QAAMG,KAAK,0BAA0BC,QAASP,EAAK+C,gBACnD9C,EAAAC,EAAAC,cAAA,QACEO,IAAI,YACJC,KAAK,yBACLqC,MAAOhD,EAAK+C,gCC7BH3B,EAAA,WAAArB,GAAA,IAAGkD,EAAHlD,EAAGkD,SAAH,OACbhD,EAAAC,EAAAC,cAAC+B,EAAA,YAAD,CACEb,MAAK,aAeL6B,OAAQ,SAAAlD,GAAI,OACVC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACqC,EAAD,CAAcxC,KAAMA,EAAKuB,KAAKC,eAC9BvB,EAAAC,EAAAC,cAAA,eAAU8C,KAnBhBjD,KAAAmD","file":"component---src-templates-markdown-js-754c276482ae5f68bc85.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\n\nexport default ({ data }) => (\n  <Helmet>\n    <title>{data.title} | David Hartsough</title>\n    <meta name=\"description\" content={data.description} />\n    <meta name=\"keywords\" content={data.keywords} />\n    <link rel=\"canonical\" href={data.url} />\n    <meta property=\"og:title\" content={data.title} />\n    <meta property=\"og:type\" content=\"article\" />\n    <meta property=\"og:url\" content={data.url} />\n    <meta property=\"og:description\" content={data.description} />\n    <script type=\"application/ld+json\">{`\n      {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"BlogPosting\",\n        \"name\": \"${data.title}\",\n        \"url\": \"${data.url}\",\n        \"headline\": \"${data.title}\",\n        \"keywords\": \"${data.keywords}\",\n        \"description\": \"${data.description}\",\n        \"image\": \"${data.image}\",\n        \"author\": {\n          \"@type\": \"Person\",\n          \"name\": \"${data.author}\",\n          \"url\": \"${data.authorUrl}\"\n        }\n      }\n    `}</script>\n  </Helmet>\n)\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport MarkdownHelmet from '../components/MarkdownHelmet'\n\nexport default ({ data }) => {\n  const meta = data.site.siteMetadata\n  const md = data.markdownRemark\n  return (\n    <Layout>\n      <MarkdownHelmet\n        data={{\n          title: md.frontmatter.title,\n          description: md.frontmatter.description,\n          keywords: `${meta.baseKeywords}${md.frontmatter.keywords}`,\n          url: `${meta.url}${md.fields.slug.substring(1)}`,\n          image: meta.image,\n          author: meta.author,\n          authorUrl: meta.authorUrl,\n        }}\n      />\n      <header>\n        <h1>{md.frontmatter.title}</h1>\n        <p className=\"subheading\">\n          by <Link to=\"/\">{meta.author}</Link>{' '}\n          <span className=\"date\">({md.frontmatter.date})</span>\n        </p>\n      </header>\n      <div dangerouslySetInnerHTML={{ __html: md.html }} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query MarkdownQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        baseKeywords\n        image\n        authorUrl\n        url\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date\n        description\n        keywords\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nexport default ({ data }) => (\n  <Helmet>\n    <html lang=\"en\" prefix=\"og: http://ogp.me/ns#\" />\n    <meta name=\"author\" content={data.author} />\n    <meta property=\"og:image\" content={data.image} />\n    <meta property=\"og:image:type\" content=\"image/png\" />\n    <meta property=\"og:image:alt\" content={data.imageAlt} />\n    <meta property=\"og:locale\" content=\"en_US\" />\n    <meta property=\"og:site_name\" content={data.title} />\n    <meta name=\"twitter:card\" content=\"summary\" />\n    <meta name=\"twitter:site\" content={data.twitterSite} />\n    <meta name=\"twitter:creator\" content={data.twitterCreator} />\n    <meta name=\"mobile-web-app-capable\" content=\"yes\" />\n    <meta name=\"application-name\" content={data.title} />\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n    <meta name=\"apple-mobile-web-app-title\" content={data.title} />\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n    <meta name=\"format-detection\" content=\"telephone=no\" />\n    <link rel=\"shortcut icon\" href=\"/favicon.ico\" />\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\n    <link\n      rel=\"icon\"\n      type=\"image/png\"\n      sizes=\"192x192\"\n      href=\"/android-chrome-192x192.png\"\n    />\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\n    <meta name=\"msapplication-TileImage\" content=\"/mstile-144x144.png\" />\n    <meta name=\"msapplication-TileColor\" content={data.themeColorHex} />\n    <link\n      rel=\"mask-icon\"\n      href=\"/safari-pinned-tab.svg\"\n      color={data.themeColorHex}\n    />\n  </Helmet>\n)\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport LayoutHelmet from './LayoutHelmet'\nimport './base.css'\nimport './layout.css'\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          siteMetadata {\n            title\n            author\n            image\n            imageAlt\n            twitterSite\n            twitterCreator\n            themeColorHex\n          }\n        }\n      }\n    `}\n    render={data => (\n      <main>\n        <LayoutHelmet data={data.site.siteMetadata} />\n        <section>{children}</section>\n      </main>\n    )}\n  />\n)\n"],"sourceRoot":""}