{"version":3,"sources":["webpack:///./src/components/IndexHelmet.js","webpack:///./src/pages/index.js","webpack:///./src/components/LayoutHelmet.js","webpack:///./src/components/layout.js"],"names":["IndexHelmet","_ref","data","react_default","a","createElement","Helmet_default","title","name","content","description","keywords","rel","href","url","property","type","schemaType","image","author","authorUrl","__webpack_require__","d","__webpack_exports__","query","layout","site","siteMetadata","className","allMarkdownRemark","edges","map","_ref2","node","key","id","gatsby_browser_entry","to","fields","slug","frontmatter","date","LayoutHelmet","lang","prefix","imageAlt","twitterSite","twitterCreator","sizes","themeColorHex","color","children","render","_3808212352"],"mappings":"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","file":"component---src-pages-index-js-7e4cd0742a330b316111.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\n\nexport default ({ data }) => (\n  <Helmet>\n    <title>{data.title}</title>\n    <meta name=\"description\" content={data.description} />\n    <meta name=\"keywords\" content={data.keywords} />\n    <link rel=\"canonical\" href={data.url} />\n    <meta property=\"og:title\" content={data.title} />\n    <meta property=\"og:type\" content=\"website\" />\n    <meta property=\"og:url\" content={data.url} />\n    <meta property=\"og:description\" content={data.description} />\n    <script type=\"application/ld+json\">{`\n      {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"${data.schemaType}\",\n        \"name\": \"${data.title}\",\n        \"url\": \"${data.url}\",\n        \"headline\": \"${data.title}\",\n        \"keywords\": \"${data.keywords}\",\n        \"description\": \"${data.description}\",\n        \"image\": \"${data.image}\",\n        \"author\": {\n          \"@type\": \"Person\",\n          \"name\": \"${data.author}\",\n          \"url\": \"${data.authorUrl}\"\n        }\n      }\n    `}</script>\n  </Helmet>\n)\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport IndexHelmet from '../components/IndexHelmet'\n\nexport default ({ data }) => (\n  <Layout>\n    <IndexHelmet data={data.site.siteMetadata} />\n    <header>\n      <h1>Writings</h1>\n      <p className=\"subheading\">\n        by{' '}\n        <a href={data.site.siteMetadata.authorUrl}>\n          {data.site.siteMetadata.author}\n        </a>\n      </p>\n    </header>\n    <ul>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <li key={node.id}>\n          <Link to={node.fields.slug}>\n            ({node.frontmatter.date}) {node.frontmatter.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n)\n\nexport const query = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        keywords\n        author\n        url\n        image\n        schemaType\n        authorUrl\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nexport default ({ data }) => (\n  <Helmet>\n    <html lang=\"en\" prefix=\"og: http://ogp.me/ns#\" />\n    <meta name=\"author\" content={data.author} />\n    <meta property=\"og:image\" content={data.image} />\n    <meta property=\"og:image:type\" content=\"image/png\" />\n    <meta property=\"og:image:alt\" content={data.imageAlt} />\n    <meta property=\"og:locale\" content=\"en_US\" />\n    <meta property=\"og:site_name\" content={data.title} />\n    <meta name=\"twitter:card\" content=\"summary\" />\n    <meta name=\"twitter:site\" content={data.twitterSite} />\n    <meta name=\"twitter:creator\" content={data.twitterCreator} />\n    <meta name=\"mobile-web-app-capable\" content=\"yes\" />\n    <meta name=\"application-name\" content={data.title} />\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n    <meta name=\"apple-mobile-web-app-title\" content={data.title} />\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n    <meta name=\"format-detection\" content=\"telephone=no\" />\n    <link rel=\"shortcut icon\" href=\"/favicon.ico\" />\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\n    <link\n      rel=\"icon\"\n      type=\"image/png\"\n      sizes=\"192x192\"\n      href=\"/android-chrome-192x192.png\"\n    />\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\n    <meta name=\"msapplication-TileImage\" content=\"/mstile-144x144.png\" />\n    <meta name=\"msapplication-TileColor\" content={data.themeColorHex} />\n    <link\n      rel=\"mask-icon\"\n      href=\"/safari-pinned-tab.svg\"\n      color={data.themeColorHex}\n    />\n  </Helmet>\n)\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport LayoutHelmet from './LayoutHelmet'\nimport './base.css'\nimport './layout.css'\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          siteMetadata {\n            title\n            author\n            image\n            imageAlt\n            twitterSite\n            twitterCreator\n            themeColorHex\n          }\n        }\n      }\n    `}\n    render={data => (\n      <main>\n        <LayoutHelmet data={data.site.siteMetadata} />\n        <section>{children}</section>\n      </main>\n    )}\n  />\n)\n"],"sourceRoot":""}