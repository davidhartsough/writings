{"version":3,"sources":["webpack:///./src/components/HomeHelmet.js","webpack:///./src/pages/index.js","webpack:///./src/components/BaseHelmet.js"],"names":["HomeHelmet","useStaticQuery","site","siteMetadata","title","description","keywords","url","Helmet","name","content","property","Item","slug","className","to","query","items","data","allMarkdownRemark","edges","map","node","id","frontmatter","fields","BaseHelmet","key","color","baseUrl","lang","prefix","rel","href","sizes","type"],"mappings":"+PAKe,SAASA,IAAc,IAAD,EAK/BC,yBAAe,cAHjBC,KACEC,aAAgBC,EAHe,EAGfA,MAAOC,EAHQ,EAGRA,YAAaC,EAHL,EAGKA,SAAUC,EAHf,EAGeA,IAgBlD,OACE,kBAACC,EAAA,EAAD,KACE,+BAAQJ,GACR,0BAAMK,KAAK,cAAcC,QAASL,IAClC,0BAAMI,KAAK,WAAWC,QAASJ,IAC/B,0BAAMK,SAAS,WAAWD,QAASN,IACnC,0BAAMO,SAAS,UAAUD,QAAQ,YACjC,0BAAMC,SAAS,SAASD,QAASH,IACjC,0BAAMI,SAAS,iBAAiBD,QAASL,KC3B/C,IAAMO,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMT,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,YAAhB,OACX,yBAAKS,UAAU,QACb,yBAAKA,UAAU,aACb,uBAAGA,UAAU,cACX,kBAAC,OAAD,CAAMC,GAAIF,EAAMC,UAAU,mBACvBV,IAGL,uBAAGU,UAAU,oBAAoBT,MA8C1BW,GAzCE,sBAAe,IACtBC,EADqB,EAAXC,KACGC,kBAAkBC,MAAMC,KACzC,oBACEC,KACEC,EAFJ,EAEIA,GAFJ,IAGIC,YAHJ,MAMO,CAAED,KAAInB,MANb,EAGmBA,MAGCC,YANpB,EAG0BA,YAGOQ,KANjC,EAIIY,OAAUZ,SAIhB,OACE,yBAAKC,UAAU,MACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,kBAACY,EAAA,EAAD,MACA,kBAAC1B,EAAD,MACA,wBAAIc,UAAU,SAAd,WAEE,0BAAMA,UAAU,aAAhB,OACA,kBAAC,OAAD,CAAMC,GAAG,IAAID,UAAU,iBAAvB,oBAIF,yBAAKA,UAAU,SACZG,EAAMI,KAAI,gBAAGE,EAAH,EAAGA,GAAInB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaQ,EAA3B,EAA2BA,KAA3B,OACT,kBAAC,EAAD,CACEc,IAAKJ,EACLV,KAAMA,EACNT,MAAOA,EACPC,YAAaA,aAWb,c,kCC3DlB,uGAMe,SAASqB,IAAc,IAAD,EAK/BzB,yBAAe,cAHjBC,KACEC,aAAgBM,EAHe,EAGfA,KAAMmB,EAHS,EAGTA,MAAOC,EAHE,EAGFA,QAejC,OACE,kBAAC,IAAD,KACE,0BAAMC,KAAK,KAAKC,OAAO,0BACvB,0BAAMtB,KAAK,SAASC,QAASD,IAC7B,0BAAME,SAAS,YAAYD,QAAQ,UACnC,0BAAMC,SAAS,eAAeD,QAASD,IACvC,0BAAMuB,IAAI,gBAAgBC,KAAK,iBAC/B,0BACEA,KAASJ,EAAL,oBACJG,IAAI,OACJE,MAAM,QACNC,KAAK,cAEP,0BACEF,KAASJ,EAAL,oBACJG,IAAI,OACJE,MAAM,QACNC,KAAK,cAEP,0BACEF,KAASJ,EAAL,cACJG,IAAI,OACJE,MAAM,UACNC,KAAK,cAEP,0BACEF,KAASJ,EAAL,WACJG,IAAI,OACJE,MAAM,UACNC,KAAK,cAEP,0BACEF,KAASJ,EAAL,uBACJG,IAAI,mBACJE,MAAM,YAGR,0BACEzB,KAAK,0BACLC,QAAYmB,EAAL,uBAET,0BAAMpB,KAAK,0BAA0BC,QAASkB,IAC9C,0BAAMI,IAAI,YAAYC,KAASJ,EAAL,gBAA6BD,MAAOA,IAC9D,0BAAMnB,KAAK,cAAcC,QAASkB,IAClC,0BAAMjB,SAAS,YAAYD,QAAQ,UACnC,0BAAMC,SAAS,eAAeD,QAASD,IACvC,0BAAME,SAAS,WAAWD,QAAYmB,EAAL,aACjC,0BAAMlB,SAAS,gBAAgBD,QAAQ,cACvC,0BAAMC,SAAS,eAAeD,QAAYD,EAAL,e","file":"component---src-pages-index-js-cb19299eb8c325a9d5e1.js","sourcesContent":["import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport \"./home.css\";\n\nexport default function HomeHelmet() {\n  const {\n    site: {\n      siteMetadata: { title, description, keywords, url }\n    }\n  } = useStaticQuery(\n    graphql`\n      query HomeHelmet {\n        site {\n          siteMetadata {\n            title\n            description\n            keywords\n            url\n          }\n        }\n      }\n    `\n  );\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:description\" content={description} />\n    </Helmet>\n  );\n}\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport BaseHelmet from \"../components/BaseHelmet\";\nimport HomeHelmet from \"../components/HomeHelmet\";\n\nconst Item = ({ slug, title, description }) => (\n  <div className=\"item\">\n    <div className=\"item-text\">\n      <p className=\"item-title\">\n        <Link to={slug} className=\"item-title-link\">\n          {title}\n        </Link>\n      </p>\n      <p className=\"item-description\">{description}</p>\n    </div>\n  </div>\n);\n\nexport default ({ data }) => {\n  const items = data.allMarkdownRemark.edges.map(\n    ({\n      node: {\n        id,\n        frontmatter: { title, description },\n        fields: { slug }\n      }\n    }) => ({ id, title, description, slug })\n  );\n  return (\n    <div className=\"bg\">\n      <div className=\"pattern\">\n        <div className=\"index\">\n          <div className=\"central\">\n            <BaseHelmet />\n            <HomeHelmet />\n            <h1 className=\"title\">\n              Writings\n              <span className=\"separator\"> â€¢ </span>\n              <Link to=\"/\" className=\"subtitle-link\">\n                David Hartsough\n              </Link>\n            </h1>\n            <div className=\"items\">\n              {items.map(({ id, title, description, slug }) => (\n                <Item\n                  key={id}\n                  slug={slug}\n                  title={title}\n                  description={description}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            description\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport \"normalize.css\";\nimport \"./base.css\";\n\nexport default function BaseHelmet() {\n  const {\n    site: {\n      siteMetadata: { name, color, baseUrl }\n    }\n  } = useStaticQuery(\n    graphql`\n      query BaseHelmet {\n        site {\n          siteMetadata {\n            name\n            color\n            baseUrl\n          }\n        }\n      }\n    `\n  );\n  return (\n    <Helmet>\n      <html lang=\"en\" prefix=\"og: http://ogp.me/ns#\" />\n      <meta name=\"author\" content={name} />\n      <meta property=\"og:locale\" content=\"en_US\" />\n      <meta property=\"og:site_name\" content={name} />\n      <link rel=\"shortcut icon\" href=\"/favicon.ico\" />\n      <link\n        href={`${baseUrl}favicon-16x16.png`}\n        rel=\"icon\"\n        sizes=\"16x16\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${baseUrl}favicon-32x32.png`}\n        rel=\"icon\"\n        sizes=\"32x32\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${baseUrl}icon192.png`}\n        rel=\"icon\"\n        sizes=\"192x192\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${baseUrl}icon.png`}\n        rel=\"icon\"\n        sizes=\"512x512\"\n        type=\"image/png\"\n      />\n      <link\n        href={`${baseUrl}apple-touch-icon.png`}\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n      />\n\n      <meta\n        name=\"msapplication-TileImage\"\n        content={`${baseUrl}mstile-144x144.png`}\n      />\n      <meta name=\"msapplication-TileColor\" content={color} />\n      <link rel=\"mask-icon\" href={`${baseUrl}mask-icon.svg`} color={color} />\n      <meta name=\"theme-color\" content={color} />\n      <meta property=\"og:locale\" content=\"en_US\" />\n      <meta property=\"og:site_name\" content={name} />\n      <meta property=\"og:image\" content={`${baseUrl}icon.png`} />\n      <meta property=\"og:image:type\" content=\"image/png\" />\n      <meta property=\"og:image:alt\" content={`${name}'s logo`} />\n    </Helmet>\n  );\n}\n"],"sourceRoot":""}